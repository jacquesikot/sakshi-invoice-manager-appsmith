{
  "unpublishedCollection": {
    "name": "products",
    "pageId": "Home",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\t// Some test data to allow template function\n\ttestData: [\n\t\t{\n\t\t\tid: '1',\n\t\t\tname: 'Product 1',\n\t\t\timage: '',\n\t\t\tprice: 1200,\n\t\t\tdescription: 'descript',\n\t\t},\n\t\t\t\t{\n\t\t\tid: '2',\n\t\t\tname: 'Product 2',\n\t\t\timage: '',\n\t\t\tprice: 1500,\n\t\t\tdescription: 'descript',\n\t\t},\n\t\t\t\t{\n\t\t\tid: '3',\n\t\t\tname: 'Product 3',\n\t\t\timage: '',\n\t\t\tprice: 1000,\n\t\t\tdescription: 'descript',\n\t\t},\n\t\t{\n\t\t\tid: '4',\n\t\t\tname: 'Product 4',\n\t\t\timage: '',\n\t\t\tprice: 800,\n\t\t\tdescription: 'descript 5',\n\t\t},\n\t],\n\t// Function to map returned query data to template acceptable data - returns null for keys without value\n\tproductDataMapping: (data, mappingConfig) => {\n  return data.map((item) => {\n    const mappedItem = {};\n    for (const [key, value] of Object.entries(mappingConfig)) {\n      if (item[value]) {\n        mappedItem[key] = item[value];\n      } else {\n        mappedItem[key] = null;\n      }\n    }\n    return mappedItem;\n  });\n},\n\tgetProducts: async () => {\n\t\t// boolean to switch between test and live data\n\t\tconst isTestData = false;\n\t\tif (isTestData) {\n\t\t\treturn products.testData;\n\t\t} else {\n\t\t\t// Add your Query here\n\t\t\tconst productsData = await getProductsApi.data \n\t\t\t\n\t\t\t//Please ensure that you have added your data mapping on the right side of the object in the mappingConfig variable. The keys \t\t\tin the mappingConfig object correspond to the variables in the template, and the values should be the keys in your data \t\t\t\t\tresult that correspond to those template variables. Without the proper data mapping, the template will not be able to \t\t\t\t\t\tcorrectly display the values from your data\n\t\tconst mappingConfig = {\n      id: 'id',\n      name: 'name',\n      image: 'product_image',\n      price: 'sale_price',\n      description: 'description',\n    };\n\t\t\t\n\t\t\t// Pass mapping function and query data to return data values accepted by template\n\t\t\treturn products.productDataMapping(productsData, mappingConfig);\n\t\t}\n\t},\n\tupdateProductImage: () => {},\n\tupdateProductData: async () => {\n\t\tawait updateProductApi.data\n\t},\n\tdeleteProduct: async () => {\n\t\tawait deleteProductApi.data\n\t},\n}",
    "variables": [
      {
        "name": "testData",
        "value": "[{\n  id: '1',\n  name: 'Product 1',\n  image: '',\n  price: 1200,\n  description: 'descript'\n}, {\n  id: '2',\n  name: 'Product 2',\n  image: '',\n  price: 1500,\n  description: 'descript'\n}, {\n  id: '3',\n  name: 'Product 3',\n  image: '',\n  price: 1000,\n  description: 'descript'\n}, {\n  id: '4',\n  name: 'Product 4',\n  image: '',\n  price: 800,\n  description: 'descript 5'\n}]"
      }
    ],
    "userPermissions": []
  },
  "id": "Home_products",
  "deleted": false,
  "gitSyncId": "63d2f77d46a81077d7c060af_63d2fc6946a81077d7c060b9"
}