{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "saveToS3",
    "fullyQualifiedName": "s3.saveToS3",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Home",
    "collectionId": "Home_s3",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async file => {\n  const bucket = 'ricive-mobile-app-storage';\n  const accessKeyId = 'AKIAT5IKIAOFM3NTTKVF';\n  const secretAccessKey = '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';\n  const region = 'us-east-1';\n  const endpoint = `https://${bucket}.s3.${region}.amazonaws.com`;\n  const key = file.name;\n  const contentType = file.type;\n  const date = new Date().toUTCString();\n  const requestMethod = 'PUT';\n  const requestPath = `/${key}`;\n  const requestBody = file;\n  const stringToSign = `${requestMethod}\\n\\n${contentType}\\n${date}\\n${requestPath}`;\n  const hmac = forge.hmac.create();\n  hmac.start('sha1', secretAccessKey);\n  hmac.update(stringToSign);\n  const signature = forge.util.encode64(hmac.digest().bytes());\n  const response = await fetch(`${endpoint}/${key}`, {\n    method: requestMethod,\n    headers: {\n      'Content-Type': contentType,\n      'Authorization': `AWS ${accessKeyId}:${signature}`,\n      'x-amz-date': date\n    },\n    body: requestBody\n  });\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return `${endpoint}/${key}`;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [
        {}
      ],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async file => {\n  const bucket = 'ricive-mobile-app-storage';\n  const accessKeyId = 'AKIAT5IKIAOFM3NTTKVF';\n  const secretAccessKey = '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';\n  const region = 'us-east-1';\n  const endpoint = `https://${bucket}.s3.${region}.amazonaws.com`;\n  const key = file.name;\n  const contentType = file.type;\n  const date = new Date().toUTCString();\n  const requestMethod = 'PUT';\n  const requestPath = `/${key}`;\n  const requestBody = file;\n  const stringToSign = `${requestMethod}\\n\\n${contentType}\\n${date}\\n${requestPath}`;\n  const hmac = forge.hmac.create();\n  hmac.start('sha1', secretAccessKey);\n  hmac.update(stringToSign);\n  const signature = forge.util.encode64(hmac.digest().bytes());\n  const response = await fetch(`${endpoint}/${key}`, {\n    method: requestMethod,\n    headers: {\n      'Content-Type': contentType,\n      'Authorization': `AWS ${accessKeyId}:${signature}`,\n      'x-amz-date': date\n    },\n    body: requestBody\n  });\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return `${endpoint}/${key}`;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Home_s3.saveToS3",
  "deleted": false,
  "gitSyncId": "63d7d0f9b637062d22bb07cf_63da06d1b637062d22bb36df"
}